version: "2"
run:
  tests: true
linters:
  enable:
    - asasalint # checks for pass []any as any in variadic func(...any)
    - asciicheck # checks that your code does not contain non-ASCII identifiers
    - bidichk # checks for dangerous unicode character sequences
    - bodyclose
    - containedctx
    - decorder # checks declaration order and count of types, constants, variables and functions
    - dogsled
    - dupword # checks for duplicate words in the source code
    - durationcheck # checks for two durations multiplied together
    - errname
    - errorlint
    - gochecknoinits # checks that no init functions are present in Go code
    - gocritic
    - importas # enforces consistent import aliases
    - loggercheck
    - makezero # finds slice declarations with non-zero initial length
    - mirror
    - misspell
    - musttag # enforces field tags in (un)marshaled structs
    - nakedret
    - nestif # reports deeply nested if statements
    - nilerr # finds the code that returns nil even if it checks that the error is not nil
    - noctx # finds sending http request without context.Context
    - nolintlint # reports ill-formed or insufficient nolint directives
    - predeclared # finds code that shadows one of Go's predeclared identifiers
    - promlinter
    - reassign # checks that package variables are not reassigned
    - revive # fast, configurable, extensible, flexible, and beautiful linter for Go, drop-in replacement of golint
    - staticcheck
    - thelper # detects golang test helpers without t.Helper() call and checks the consistency of test helpers
    - unconvert # removes unnecessary type conversions
    - unparam # reports unused function parameters
    - unused
    - usestdlibvars # detects the possibility to use variables/constants from the Go standard library
    - wastedassign # finds wasted assignment statements
    - whitespace # detects leading and trailing whitespace

  settings:
    gocritic:
      settings:
        captLocal:
          # Whether to restrict checker to params only.
          # Default: true
          paramsOnly: false
        underef:
          # Whether to skip (*x).method() calls where x is a pointer receiver.
          # Default: true
          skipRecvDeref: false
    govet:
      disable:
        - fieldalignment # too strict
        - shadow # bunch of false positive, doesn't realize when we return from a func
      enable-all: true
    misspell:
      locale: US
    nakedret:
      max-func-lines: 0
    nestif:
      # Minimal complexity of if statements to report.
      # Default: 5
      min-complexity: 5
    nolintlint:
      # Enable to require an explanation of nonzero length after each nolint directive.
      # Default: false
      require-explanation: true
    staticcheck:
      checks:
        - all

  exclusions:
    presets:
      - common-false-positives
      - legacy
    rules:
      - path: (.+)\.go$
        text: ifElseChain

formatters:
  enable:
    - gci
  settings:
    gci:
      sections:
        - standard # Standard section: captures all standard packages.
        - default # Default section: contains all imports that could not be matched to another section type.
        - prefix(github.com/jjti)
      custom-order: true
